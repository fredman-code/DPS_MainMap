import React, { useEffect, useState } from 'react';
import { StyleSheet, View, Image, Dimensions, ScrollView, FlatList, ActivityIndicator } from 'react-native';
import Svg, { Text, TSpan } from 'react-native-svg';
import db from './firebaseConfig'
import { collection, getDocs } from 'firebase/firestore';

const maps = [
  {
    name: "Primary GF",
    image: require('./assets/PrimaryGF.jpg'),
    originalWidth: 2481,
    originalHeight: 1790,
    points: [
      [1151,1397],[1088,1392],[957,1377],[968,1244],[1149,1204],[1226,1197],[1269,1205],[1347,1202],[1407,1380],[1562,1245],[1553,1371],[2314,344],
      [2316,225],[2198,178],[2198,258],[2198,318],[2198,411],[2198,491],[2306,484],[2198,570],[2191,652],[2318,943],[2185,1074],[2191,1163],[2313,1168],
      [2191,1258],[2324,1255],[2195,1356],[2329,1349],[2191,1457],[2331,1451],[2193,1544],[2186,770],[2331,580],[2301,813],[2185,950],[1786,953],[1930,945],
      [1791,1036],[1618,1191],[1937,1188],[1935,1279],[1932,1465],[1784,1597],[1796,1693],[1935,1690],[2181,1665],[2331,1660],[1927,1379],[1774,1141],[1798,1482],
      [1608,1444],[177,947],[315,939],[307,1092],[186,1165],[304,1173],[191,1256],[315,1268],[189,1372],[319,1364],[187,1444],[307,1452],[312,1559],
      [569,952],[717,932],[719,1045],[568,1163],[917,1173],[564,1256],[571,1344],[563,1462],[716,1577],[716,1681],[563,1673],[324,1686],[177,1683],[709,1138],[840,1472],
      [699,1477],[915,1442]

    ],
  },
  {
    name: "Primary FF",
    image: require('./assets/PrimaryFF.jpg'),
    originalWidth: 2481,
    originalHeight: 1747,
    points: [
      [2140,1666],[2296,1661],[2140,1533],[2291,1434],[2143,1437],[2288,1329],[2151,1326],[2293,1238],[2142,1235],[2289,1150],[2145,1142],[2138,1037],[2293,907],[2138,911],
      [2293,796],[2133,799],[2288,710],[2138,723],[2143,650],[2143,574],[2296,496],[2273,110],[2273,296],[2030,1656],[2030,922],[1758,1452],[1739,1120],[1560,1161],[1493,1216],
      [1580,1419],[1492,1341],[1379,1347],[1055,1339],[1211,1226],[942,1347],[922,1233],[834,1138],[854,1432],[658,1459],[671,1093],[666,1017],[661,922],[673,1550],[661,1635],
      [536,929],[506,1651],[430,924],[275,1655],[154,919],[142,1653],[536,1419],[530,1319],[541,1215],[541,1125],[305,922],[277,1055],[277,1158],[290,1261],[289,1347],[292,1454],
      [285,1537],[154,1125],[146,1231],[144,1324],[142,1421],[2148,137],[2148,203],[2153,277],[2148,343],[2148,428],[2151,496],[2274,421],[1891,1660],[1751,1560],[1884,1435],
      [1901,1333],[1891,1241],[1886,1142],[1764,1022],[1756,917],[1906,926],[1756,1655]
    ],
  },
  {
    name: "Senior FF",
    image: require('./assets/SeniorFF.jpg'),
    originalWidth: 2481,
    originalHeight: 1754,
    points: [
      [340,537],[224,539],[224,604],[348,657],[1369,542],[1131,649],[1331,650],[1478,544],[1410,664],[1620,650],[1693,544],[1699,664],[1807,542],[1796,665],[1887,544],[1891,662],
      [1975,537],[1994,670],[2142,539],[2291,532],[2289,597],[2283,657],[2156,659],[2138,750],[2128,823],[2279,770],[2151,965],[2279,950],[2143,1063],[2299,1051],[2140,1152],
      [2298,1154],[2140,1300],[2279,1295],[2133,1387],[2283,1380],[2151,1535],[2288,1535],[2143,1616],[2294,1619],[2308,404],[2309,360],[2225,364],[2220,321],[2304,316],[2225,268],
      [2299,265],[2221,200],[2304,207],[2311,142],[987,604],[481,915],[476,1051],[569,916],[561,1043],[649,1048],[744,908],[744,1038],[832,913],[943,916],[937,1016],[1075,906],
      [1075,1054],[1080,1169],[947,1149],[943,1305],[1081,1307],[928,1385],[1075,1388],[935,1528],[1068,1530],[1073,1614],[915,1601],[762,1461],[629,1460],[623,1540],[621,1673],
      [530,1674],[463,1673],[388,1668],[300,1661],[237,1664],[162,1599],[156,1558],[290,1521],[285,1442],[159,1451]
    ],
  },
  {
    name: "Senior GF",
    image: require('./assets/SeniorGF.jpg'),
    originalWidth: 3052,
    originalHeight: 2209,
    points: [
      [2803,1953],[2795,1853],[2631,1931],[2635,1839],[2834,1694],[2639,1685],[2633,1585],[2795,1610],[2639,1444],[2799,1432],[2623,1334],[2799,1321],[2637,1219],[2811,1209],
      [333,749],[333,847],[496,753],[503,898],[619,747],[725,900],[717,734],[848,749],[940,757],[934,908],[1061,753],[1055,898],[1159,745],[1159,904],[1349,743],[1325,892],
      [1533,892],[1687,763],[1805,769],[1920,755],[1781,904],[1666,890],[2095,757],[2091,904],[2214,739],[2198,892],[2327,755],[2318,908],[2455,749],[2445,896],[2631,749],
      [2648,892],[2819,732],[2803,908],[2819,814],[2823,591],[2693,518],[2697,452],[2823,471],[2703,385],[2828,389],[2815,297],[2830,219],[2689,303],[2815,528],[629,1170],
      [629,1307],[736,1164],[744,1326],[869,1317],[946,1317],[1059,1158],[1183,1170],[1359,1338],[957,1160],[1355,1172],[1192,1444],[1198,1334],[1349,1456],[1363,1595],[1190,1604],
      [1355,1681],[1200,1692],[1368,1853],[1196,1845],[1188,1947],[1355,1941],[985,1618],[975,1749],[807,1773],[807,1851],[807,2013],[705,2013],[701,1853],[543,2009],[458,2021],
      [349,2019],[243,1988],[276,1869],[427,1874],[439,1747],[263,1775],[259,1673],[433,1671]
    ],
  }
];

const MapView = ({ map }) => {
  const screenWidth = Dimensions.get('window').width;
  const screenHeight = Dimensions.get('window').height;
  const widthRatio = screenWidth / map.originalWidth;
  const heightRatio = screenHeight / map.originalHeight;
  const baseScale = Math.min(widthRatio, heightRatio);
  const [scale, setScale] = useState(1);

  const scaleCoords = (coords) => ({
    x: coords[0] * baseScale * scale,
    y: coords[1] * baseScale * scale,
  });

  return (
    <ScrollView
      style={styles.scrollContainer}
      maximumZoomScale={3}
      minimumZoomScale={1}
      pinchGestureEnabled={true}
    >
      <View style={{ width: screenWidth, height: screenHeight, justifyContent: 'center', alignItems: 'center' }}>
        <View style={{ position: 'relative', width: map.originalWidth * baseScale * scale, height: map.originalHeight * baseScale * scale }}>
          <Image source={map.image} style={{ width: '100%', height: '100%' }} resizeMode="contain" />
          <Svg style={{ position: 'absolute', top: 0, left: 0 }} width={map.originalWidth * baseScale * scale} height={map.originalHeight * baseScale * scale}>
            {map.points.map((coords, index) => {
              const scaledCoords = scaleCoords(coords);
              return (
                <Text key={index} x={scaledCoords.x} y={scaledCoords.y} fontSize="8" fill="red" textAnchor="middle" fontWeight="bold">
                  <TSpan>{index + 1}</TSpan>
                </Text>
              );
            })}
          </Svg>
        </View>
      </View>
    </ScrollView>
  );
};

const pge1 = () => {
  return (
    <FlatList
      data={maps}
      keyExtractor={(item) => item.name}
      horizontal
      pagingEnabled
      renderItem={({ item }) => <MapView map={item} />}
    />
  );
};

const styles = StyleSheet.create({
  scrollContainer: {
    flex: 1,
    backgroundColor: '#fff',
  },
});

export default pge1;